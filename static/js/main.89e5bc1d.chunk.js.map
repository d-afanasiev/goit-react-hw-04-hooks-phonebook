{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","hooks/useLocalStorage.js","index.js"],"names":["module","exports","ContactForm","formSubmitHandler","useState","name","setName","number","setNumber","handleChange","e","target","value","reset","className","css","form","onSubmit","preventDefault","idFullName","uuidv4","id","htmlFor","type","pattern","title","required","onChange","inputName","inputTel","submitName","Filter","filter","filterList","inputFilter","ContactList","getVisibleContacts","deleteContact","listContacts","map","contact","item","button","onClick","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","contacts","setContacts","setFilter","data","find","alert","normalizeFilter","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89e5bc1d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"name\":\"ContactForm_name__1yuhS\",\"inputName\":\"ContactForm_inputName__26Y8y\",\"inputTel\":\"ContactForm_inputTel__1C3lX\",\"submitName\":\"ContactForm_submitName__2nn2T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContacts\":\"ContactList_listContacts__29K0_\",\"button\":\"ContactList_button__1RuFy\",\"item\":\"ContactList_item__3YsZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputFilter\":\"Filter_inputFilter__fLLJ3\"};","import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport css from \"./ContactForm.module.css\";\n\nexport default function ContactForm({ formSubmitHandler }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let idFullName = uuidv4();\n    const totalState = {\n      id: idFullName,\n      name: name,\n      number: number,\n    };\n\n    formSubmitHandler(totalState);\n\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label htmlFor=\"sendName\" className={css.name}>\n        Name\n      </label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={name}\n        onChange={handleChange}\n        className={css.inputName}\n        id=\"sendName\"\n      />\n      <label htmlFor=\"sendTel\">Number</label>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        className={css.inputTel}\n        onChange={handleChange}\n        value={number}\n        id=\"sendTel\"\n      />\n      <button type=\"submit\" className={css.submitName}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  formSubmitHandler: PropTypes.func,\n};\n","import PropTypes from \"prop-types\";\nimport css from \"./Filter.module.css\";\n\nfunction Filter({ filter, filterList }) {\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        className={css.inputFilter}\n        onChange={filterList}\n        value={filter}\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  formSubmitHandler: PropTypes.func,\n};\n\nexport default Filter;\n","import PropTypes from \"prop-types\";\nimport css from \"./ContactList.module.css\";\n\nfunction ContactList({ getVisibleContacts, deleteContact }) {\n  return (\n    <ul className={css.listContacts}>\n      {getVisibleContacts().map((contact) => (\n        <li key={contact.id} className={css.item}>\n          {contact.name}: {contact.number}\n          <button\n            type=\"submit\"\n            className={css.button}\n            onClick={() => deleteContact(contact)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  getVisibleContacts: PropTypes.func,\n  deleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import \"./App.css\";\nimport PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\n\nfunction App() {\n  const [contacts, setContacts] = useLocalStorage(\"contacts\", []);\n  const [filter, setFilter] = useState(\"\");\n\n  const filterList = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const formSubmitHandler = (data) => {\n    const findContacts = contacts.find((contact) => contact.name === data.name);\n\n    !findContacts\n      ? setContacts([data, ...contacts])\n      : alert(`${data.name} is already in contacts.`);\n  };\n\n  const getVisibleList = () => {\n    const normalizeFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n\n  const deleteContact = (data) => {\n    return setContacts(contacts.filter((contact) => contact.id !== data.id));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"titlePhonebook\">Phonebook</h1>\n      <ContactForm formSubmitHandler={formSubmitHandler} />\n\n      <h1 className=\"titleContacts\">Contacts</h1>\n      <Filter filter={filter} filterList={filterList} />\n      <ContactList\n        getVisibleContacts={getVisibleList}\n        deleteContact={deleteContact}\n      />\n    </div>\n  );\n}\n\nApp.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n};\n\nexport default App;\n","import { useState, useEffect } from \"react\";\n\nexport default function useLocalStorage(key, defaultValue) {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}